{
	"blogPosts": {
		"blog1": {
			"id": "blog1",
			"title": "HTML, CSS, and more...",
			"date": "02/27/2018",
			"post": "Our focus this week, in addition to HTML and CSS, was the Command Line and GitHub. Truth be told, I didn't know either existed until a few months ago. So needlesss to say, it has been an eye-opening seven days. The Command Line...whoa. I thought we were past the black-screen DOS days, but I'm learning that it is actually a very powerful tool that offers more control, access to applications that are otherwise unavailable, and the ability to control the mind of servers through scripts. I also learned a few funny acronyms like 'man command', 'touch' and 'mkdir'. It's not a folder, Bill... It's a directory! We can't and won't let you win this battle. ...GitHub... HTML is my pal and I'm beginning to understand how to name and contain the elements so that they can be styled later, but CSS--and more specifically--positioning elements on a page is seemingly the end of me."
		},
		"blog2": {
			"id": "blog2",
			"title": "JavaScript",
			"date": "03/06/2018",
			"post": "Over the past 7 days we've begun learning about strings, conditional statements, arrays, for loops, and objects. <em>Strings</em> There are 6 primative types of strings including: strings, numbers, boolean, null, undefined, and objects--which also include arrays and lists. We learned several new methods to use alongside strings like: indexOf(), replace(), join() and split(), how to concatenate strings, and how to test our code using the console before connecting our JavaScript to the DOM. <em>Conditional Statements</em>: These statements include: if, if else, and else and were properly drilled into my brain from the pre-work. <em>Arrays</em> Arrays are like storage bins that you can hold strings, numbers, and booleans. Through our presentations and challenges, we covered several basic array methods for example: pop()--which removes a value from the end of the array and push()-which adds a value to the beginning of an array. <em>For Loops</em> For loops include 3 parts: the starting value, the stopping value,and how to increment the loop. I was pretty comfortable with these too as a result of the pre-work. This week was incredibly challenging for me. To say that I feel behind the curve, I think, would be an understatement. The best way to describe this week is to say that it's been humbling, overwhelming, and frustrating. With that said, I also understand that this is a 'bootcamp' and is intended to break people again and again in order to adequately prepare them for real-world experience. I also believe that these concepts will sink in as I get more training and more time passes. One thing I found very interesting this week, is that you can solve a problem in any number of ways, but there is definitely a 'wrong answer'. Looking forward to week 4."
		},
		"blog3": {
			"id": "blog3",
			"title": "GitHub for teams",
			"date": "03/12/18",
			"post": "This week we covered advanced JavaScript and GitHub for teams. Functions are starting to make a little more sense. Although, I still get hung up on small issues like naming the variables and parameters. We also watched Zoe, Callan, and Lauren use GitHub to create and manage a project, which was pretty cool. I learned how to work with a team to plan a project and then use GitHub as a project management tool. For example, creating a project, adding issues and styling tickets to include the story, acceptance criteria, and technical notes. For our group project, we only did the planning stage together. Next week we will begin splitting tickets among the team and reviewing each others work, which should be very interesting."
		},
		"blog4": {
			"id": "blog4",
			"title": "ES6 & DOM interaction",
			"date": "3/24/18",
			"post": "This week we covered ES6, DOM interaction and markdown. The new ES6 features will take some time to adjust to, but I'm sure it will be worth it in terms of ease of use, simplification, etc. DOM interaction is a mind-blowing concept..so cool! This concept allows us to respond to how the user is interacting with the page. I learned the hard way the importance of properly placed event listeners. Event listeners allow us to keep our JavaScript from running until the user has had a chance to interact with a particular event, such as keyboard and mouse events. Additionally, we learned how to target different elements in our HTML. For example, using the parentNode attribute to target children and descendents. Last, but not least, we covered Markdown. More specifically, formatting and including content that will make our README.md files look professional. With each passing week, and new topic learned, I am amazed at the number of tools available to developers. There is so much more this it than coding. Excited to see what's next."
		},
		"blog5": {
			"id": "blog5",
			"title": "XHR calls",
			"date": "4/01/18",
			"post": "This week we were introduced to XML HTTP Requests or XHR, which is a black-magic way of retrieving data from a server. XHR Request are asynchronous, which typically take more time to return. For efficiency sake, we can use callback functions which allow our code to continue running while the XHR request is being processed. Once the request is returned from the server, the callback function can complete its tasks. An XHR request includes five lines of code: a constructor function to create the new request, a function to add an event listener and execute the code upon completion, a function that listens for load errors, an open function that tells the server what to do with the data and where to find the data, the final line initializes and executes the entire request. This has been a very challenging week of material. There is so much to learn and absorb. Feeling very overwhelmed this week, but hopeful that what we are learning will make more sense with time and repetition."
		},
		"blog6": {
			"id": "blog6",
			"title": "Bootstrap",
			"date": "4/09/18",
			"post": "This week we started using Bootstrap, an open-source toolkit that is used to develop with CSS, HTML, and JavaScript. For our Superheroes project, we used Bootstrap for our navbar, buttons, and creating the superhero panels. Bootstrap seems to have really great documentation, which makes it easy to find the tools you're looking for. I look forward to reading up on all that it offers and applying it to future projects."
		},
		"blog7": {
			"id": "blog7",
			"title": "Task Runners & Browserify",
			"date": "4/15/18",
			"post": "Week nine we were introduced to task runners and browserify. Setting up new projects now includes individual directories for javascript files, lib files (i.e. Gruntfile.js, package.json, and .eslintrc.json), CSS files, and a npm install for grunt. The new process is infinitely more complex with several new steps to remember and a lot of room for error. We've worked through several new setups over the past week and I think the benefits will outweigh the extra steps once I memorize the process. Another thing that has been a challenge this week has been figuring out how to connect all of dots through module.exports. A couple things I found very helpful this week were ESlint and the alumni table. Looking forward to having more interaction with, and learning from, peeps who have completed the NSS bootcamp."
		},
		"blog8": {
			"id": "blog8",
			"title": "Browserify part II",
			"date": "4/24/18",
			"post": "Part II of task runners and browserify. I'm feeling much better about connecting files through 'require' and 'module.export' statements this week, thankfully. I did have a mishap in the terminal though when I accidentally entered an unnecessary install to one of my directories. Through this misstep I added thousands of files and new directories. I was able to figure out what happened and where with the help of my instructor and then was able to troubleshoot how to correct the issue with one of my teammates. We had to do a rm -rf command which means we removed the directory with recursive force. Really scary stuff, actually, but a great lesson learned."
		},
		"blog9": {
			"id": "blog9",
			"title": "Chatty App",
			"date": "5/01/18",
			"post": "This week my team worked on the 'chatty app'--for our second group project. We spent a lot of time planning out every detail of the project. We wrote and then re-wrote each project ticket--adding more detail--before we even started coding. Once we were ready to code, I was amazed at how smoothly the process went because of our preparation. We had to brush up a bit on how to work in a team setting. For example, the git fetch and git branch -al commands and remembering to re-start grunt after pulling down each other's work. Our use of browsersify and taks runners also significantly reduced the number of conflicts we encountered. We encountered a couple circular dependency issues, which were great learning experiences. I really enjoyed my team and our second group project."
		},
		"blog10": {
			"id": "blog10",
			"title": "jQuery",
			"date": "5/15/18",
			"post": "This week we were introduced to jQuery for DOM manipulation and Ajax for XHR calls. Really excited about both of these new techniques. With the introduction of jQuery, we are essentially un-learning the traditional way of writing the following commands: .addEventListener, document.getElementBy.., traversing techniques like .parentNode.parentNode.children[0], etc. jQuery seems to be a library with abbreviated--more intuitive--JavaScript commands. jQuery can reduce several lines of plain JavaScript into a single line. Replacing XHR calls with Ajax has also been a revelation. We're working on a project this week to put these new techniques into practice. It's been a challenge to un-learn some of the code I'd typically write, but I can see that once I become accustomed to the new code it will make my life much easier."
		},
		"blog11": {
			"id": "blog11",
			"title": "Promises",
			"date": "5/22/18",
			"post": "This week we were introduced to Promises. Promises help control the flow of an application, particularly one with asynchronous javascript, with the added benefit of informing you once a particular task is complete. Promises also allow you to establish a chain of command, which is particularly useful when you need a first set of data to return before moving on to the second. Setting a Promise doesn't seem all that different, in terms of coding, than the XHMHtttpRequest calls we've been doing up to this point. Instead of using 'success' and 'fail', we now use include 'resolve' and 'reject' functions and we have the added benefit or setting the order of commands and even running promises in parallel."
		},
		"blog12": {
			"id": "blog12",
			"title": "APIs",
			"date": "5/29/18",
			"post": "This week we were introduced to requesting data through an Application Programming Interface, or API, as opposed to calling the data we were previously manually-building in .json files. We covered a few important HTTP verbs like: POST, GET, PUT, and DELETE commands (a.k.a CRUD), how to read response codes from our request,and how to read query strings in URLs. I'm very excited about possibilities available to us, as developers, through the use of APIs. The most important lesson I learned this week, is to hide the file that contains your API key in the .gitignore file."
		},
		"blog13": {
			"id": "blog13",
			"title": "Firebase",
			"date": "6/01/18",
			"post": "This week we installed Firebase in a few of our projects and then talked about how to use it as a database to store and retrieve our information. We learned to setup and use relational data collections instead of nesting or using arrays inside our data models and discussed using the CRUD method to create, read, update, and delete information to/from our database. Next week we will dive deeper into updating and deleting information from Firebase. Good times."
		},
		"blog14": {
			"id": "blog14",
			"title": "Authentication",
			"date": "6/11/18",
			"post": "This week we learned how to deploy our projects using firebase. Before we deploy we need to bundle and make sure all files have the JS, CSS, and html needed and run grunt. In grunt, we need to create copy and clean tasks and make sure our .gitignore file isn’t included in the build/ directory.  From there we use the firebase init command in the root of our project and follow a few simple steps. I deployed a couple projects without issue over the weekend, but ran into an issue with my personal site. I was off by a couple errors in the command line that ended up being fine and accidentally called the grunt npm install commands in root of my project rather than within the lib directory."
		},
		"blog15": {
			"id": "blog15",
			"title": "SASS",
			"date": "6/23/18",
			"post": "Sass, or syntactically awesome stylesheets, is a CSS preprocessor. We learned the SCSS syntax, which is a component based architecture that allows us to compartmentalize and reuse styles. Sass also includes features that aren't available in CSS. For example, nesting,variables, inheritance, mixins, partials and imports. We didn't spend a lot of time with this topic, but it seems to be a much more efficient and organized method of implementing styles into our projects."
		},
		"blog16": {
			"id": "blog16",
			"title": "Frameworks",
			"date": "7/3/18",
			"post": "This week we were introduced to JavaScript frameworks. i.e. Vue, Angular, and React. A framework is a collection of components and libraries to fulfill the needs of a single page web application and makes getting and displaying data easier. What I like most is that frameworks add organization and structure to applications. We chose to use React for our projects because it is the number one requested framework among Nashville employers and it uses the most advanced ES7 concepts which will strengthen our JS skills. A few of the pros to using React are: the virtual DOM, it's core and companion libraries, and component based nature. React also has a very strong support community and agreed upon code standards, which brings more clarity around where and how code should be written. Learning React has certainly been a challenge. Setting up new projects is completely different than what we've been accustomed to up to this point, our thinking has shifted to a more component based approach code. One of the biggest obstacles for me this week, in addition to all the new terms like render, JSX, props, state, and the lifecycle methods, has been understanding the file naming conventions--which at times are the same with the exception of a capitalized letter (for example, listings.js and Listings.js) and how each component ties into the project. The learning curve is steep, but I am encouraged by the more organized approach."
		},
		"blog17": {
			"id": "blog17",
			"title": "React",
			"date": "7/10/18",
			"post": "This week we focused on how to divide a page into sections and then create a component for each section. We also spent a lot of time walking through axios requests to Firebase for GET and POST. On Saturday, we learned about routing--which is basically the ability to switch views in and out within a single page application based upon how the user is interacting with the page. To achieve this we installed the react-router-dom. Keywords for Saturday: Browser Router, Switch, Route, and Redirect."
		}
	},
	"projects": {
		"project1": {
			"id": "project1",
			"title": "Movie Maker",
			"thumbnail": "https://raw.githubusercontent.com/nathanpabst/nathanpabst.github.io/4ed18b9881f34962e3481ce64e74900bc09edc80/screenshots/movie-maker.png",
			"description": "This application is used to help aspiring film directors create budgets.",
			"technologiesUsed": "HTML5, CSS3, Bootstrap, JavaScript/ES6, JSON, XHR, Node.JS/Grunt/Browserify, and DOM manipulation.",
			"available": true,
			"url": "https://movie-maker-5792c.firebaseapp.com/",
			"githubUrl": "https://github.com/nathanpabst/movie-maker"
		},
		"project2": {
			"title": "Local Weather",
			"thumbnail": "https://raw.githubusercontent.com/nathanpabst/nathanpabst.github.io/4ed18b9881f34962e3481ce64e74900bc09edc80/screenshots/insta-weather.png",
			"description": "This application is used to help users find the weather.",
			"technologiesUsed": "HTML5, CSS3, Bootstrap, jQuery, JavaScript/ES6, JSON, AJAX, Node.JS/Grunt/Browserify, DOM manipulation, CRUD, authentication, databases, and Firebase deployment.",
			"available": true,
			"url": "https://local-weather-646f1.firebaseapp.com",
			"githubUrl": "https://github.com/nathanpabst/local-weather"
		},
		"project3": {
			"title": "Ex-Tracker",
			"thumbnail": "https://raw.githubusercontent.com/nathanpabst/nathanpabst.github.io/4ed18b9881f34962e3481ce64e74900bc09edc80/screenshots/ex-tracker.png",
			"description": "This application is used to help me and others avoid running into one of my 'exes'.",
			"technologiesUsed": "HTML5, CSS3, Bootstrap, jQuery, JavaScript/ES6, JSON, AJAX, Node.JS/Grunt/Browserify, and DOM manipulation.",
			"available": true,
			"url": "https://ex-tracker-eca54.firebaseapp.com/",
			"githubUrl": "https://github.com/nathanpabst/ex-tracker2"
		}
	},
	"jobs": {
		"job1": {
			"id": "job1",
			"role": "Manager, Systems and Business Operations",
			"dates": "March 2018 - Present",
			"company": "Ingram Content Group, TN",
			"summary1": "Develop, manage, and enhance the platforms and systems that are integral to the business related to analyzing, supporting and improving the overall customer experience.",
			"summary2": "Manage the development of detailed technical product specification and customer training materials, FAQs and related documentation in conjunction with the business units at Ingram Content Group.",
			"summary3": "Develop key metrics, KPIs and reporting on customer trends and experiences to ensure projected targets for new accounts and revenue are met."
		},
		"job2": {
			"id": "job2",
			"role": "Business Operations Analyst",
			"dates": "July 2016 - March 2018",
			"company": "Ingram Content Group, TN",
			"summary1": "Collect, analyze, and interpret business and operations revenue and departmental productivity.",
			"summary2": "Recommend solutions to align individual business functions with organizational goals to improve business efficiency based upon analysis of relevant data.",
			"summary3": "Lead projects within the department, coordinating participants and ensuring plans and projects are documented and targets are met."
		},
		"job3": {
			"id": "job3",
			"role": "Independent Publishing Specialist",
			"dates": "2014 - 2016",
			"company": "Ingram Content Group, TN",
			"summary1": "Attended trade shows, screened new business opportunities, and developed leads",
			"summary2": "Cultivated business relationships with relevant service providers by defining needs, researching and evaluating option, negotiating terms, finalizing deals, implementing plans,evaluating effectiveness, and adjusting accordingly.",
			"summary3": "Monitored, identified, and evaluated weaknesses in services through reporting and created plans to improve the customer experience."
		},
		"job4": {
			"id": "job4",
			"role": "Marketing Manager",
			"dates": "2012 - 2014",
			"company": "Ingram Content Group, TN",
			"summary1": "Developed, implemented, and created content for traditional and digital marketing campaigs including programs, activities, and trade show events.",
			"summary2": "Managed all elements of the website resulting in month over month traffic growth of 21%.",
			"summary3": "Developed and launched search engine marketing campaigns."
		},
		"job5": {
			"id": "job5",
			"role": "Publisher Advertising Representative",
			"dates": "2009 - 2012",
			"company": "Ingram Content Group, TN",
			"summary1": "Obtained 114% of revenue-to-goal for 2011 resulting in a positive variance of $105,000.",
			"summary2": "Analyzed market needs and integrated strategic advertising plans.",
			"summary3": "Evaluated the success of advertising vehicles and forecasted budgets."
		}
	},
	"education": {
		"school1": {
			"id": "school1",
			"name": "Nashville Software School",
			"dates": "February 2018 - Present",
			"achievement": "Part-Time Web Developer Bootcamp"
		},
		"school2": {
			"id": "school2",
			"name": "Belmont University",
			"dates": "December 2006",
			"achievement": "BA in Business Administration"
		}
	},
	"technologies": {
		"tech1": {
			"id": "tech1",
			"name": "Bootstrap",
			"imgURL": "http://pluspng.com/img-png/bootstrap-logo-png-tweetboard-bootstrap-logo-png-250.png"
		},
		"tech2": {
			"id": "tech2",
			"name": "Browserify",
			"imgURL": "https://upload.wikimedia.org/wikipedia/en/thumb/2/27/Browserify.svg/1200px-Browserify.svg.png"
		},
		"tech3": {
			"id": "tech3",
			"name": "Firebase",
			"imgURL": "https://cdn.freebiesupply.com/logos/large/2x/firebase-1-logo-png-transparent.png"
		},
		"tech4": {
			"id": "tech4",
			"name": "GitHub",
			"imgURL": "https://2sxc.org/Portals/0/adam/Content/4IqBjx3pXEC7a7-fVX2GBQ/Image/github-logo.png"
		},
		"tech5": {
			"id": "tech5",
			"name": "Grunt",
			"imgURL": "https://gruntjs.com/img/og.png"
		},
		"tech6": {
			"id": "tech6",
			"name": "HTML5",
			"imgURL": "https://pathowe.co.uk/wp-content/uploads/2017/02/HTML5.png"
		},
		"tech7": {
			"id": "tech7",
			"name": "JavaScript",
			"imgURL": "https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Unofficial_JavaScript_logo_2.svg/480px-Unofficial_JavaScript_logo_2.svg.png"
		},
		"tech8": {
			"id": "tech8",
			"name": "jQuery",
			"imgURL": "https://logoeps.com/wp-content/uploads/2011/08/jquery-logo.jpg"
		},
		"tech9": {
			"id": "tech9",
			"name": "NPM",
			"imgURL": "https://www.vectorlogo.zone/logos/npmjs/npmjs-tile.svg"
		},
		"tech10": {
			"id": "tech10",
			"name": "Sass",
			"imgURL": "https://sass-lang.com/assets/img/styleguide/color-1c4aab2b.png"
		},
		"tech11": {
			"id": "tech11",
			"name": "React",
			"imgURL": "https://appendto.com/wp-content/uploads/2016/05/React-1.png"
		}
	}
}